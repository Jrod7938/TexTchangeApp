name: Android Emulator Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # Specifies the type of runner that the job will run on
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      # Sets up a specific version of Java, needed for Android development
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      # Sets up the Android SDK environment
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Creates and starts an Android emulator for testing
      - name: Create and start emulator
        run: |
          echo "y" | sdkmanager "system-images;android-34;google_apis;x86_64"
          echo "no" | avdmanager create avd --force --name testAVD --abi google_apis/x86_64 --package "system-images;android-34;google_apis;x86_64"
          $ANDROID_HOME/emulator/emulator -avd testAVD -no-audio -no-window -no-boot-anim -accel on &

      # Waits for the emulator to fully boot before proceeding to the next step
      - name: Wait for emulator to start
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

      # Runs the connectedAndroidTest task to execute instrumented tests
      - name: Run connectedAndroidTest
        run: ./gradlew connectedAndroidTest
